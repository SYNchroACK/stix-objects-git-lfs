{
    "type": "bundle",
    "id": "bundle--92cf299b-7a96-4fba-a41a-08dd218de4d6",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a609498f-56fe-42e1-9138-bf78c085efae",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-10-21T00:16:07.535433Z",
            "modified": "2023-10-21T00:16:07.535433Z",
            "name": "CVE-2023-45666",
            "description": "stb_image is a single file MIT licensed library for processing images.  It may look like `stbi__load_gif_main` doesn’t give guarantees about the content of output value `*delays` upon failure. Although it sets `*delays` to zero at the beginning, it doesn’t do it in case the image is not recognized as GIF and a call to `stbi__load_gif_main_outofmem` only frees possibly allocated memory in `*delays` without resetting it to zero. Thus it would be fair to say the caller of `stbi__load_gif_main` is responsible to free the allocated memory in `*delays` only if `stbi__load_gif_main` returns a non null value. However at the same time the function may return null value, but fail to free the memory in `*delays` if internally `stbi__convert_format` is called and fails. Thus the issue may lead to a memory leak if the caller chooses to free `delays` only when `stbi__load_gif_main` didn’t fail or to a double-free if the `delays` is always freed",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-45666"
                }
            ]
        }
    ]
}