{
    "type": "bundle",
    "id": "bundle--ba67cc3c-d72e-44b1-9f0c-04abc0418f06",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9ff5f925-5cf6-4934-bde4-27d8efef9d3d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-08-08T00:05:30.963864Z",
            "modified": "2023-08-08T00:05:30.963864Z",
            "name": "CVE-2023-39363",
            "description": "Vyer is a Pythonic Smart Contract Language for the Ethereum Virtual Machine (EVM). In versions 0.2.15, 0.2.16 and 0.3.0, named re-entrancy locks are allocated incorrectly. Each function using a named re-entrancy lock gets a unique lock regardless of the key, allowing cross-function re-entrancy in contracts compiled with the susceptible versions. A specific set of conditions is required to result in misbehavior of affected contracts, specifically: a `.vy` contract compiled with `vyper` versions `0.2.15`, `0.2.16`, or `0.3.0`; a primary function that utilizes the `@nonreentrant` decorator with a specific `key` and does not strictly follow the check-effects-interaction pattern (i.e. contains an external call to an untrusted party before storage updates); and a secondary function that utilizes the same `key` and would be affected by the improper state caused by the primary function. Version 0.3.1 contains a fix for this issue.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-39363"
                }
            ]
        }
    ]
}