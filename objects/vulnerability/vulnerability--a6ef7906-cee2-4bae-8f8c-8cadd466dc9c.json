{
    "type": "bundle",
    "id": "bundle--2add29e1-d9d8-4f3a-88a0-c2c3c1428672",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a6ef7906-cee2-4bae-8f8c-8cadd466dc9c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-07-18T00:06:16.078708Z",
            "modified": "2023-07-18T00:06:16.078708Z",
            "name": "CVE-2023-37475",
            "description": "Hamba avro is a go lang encoder/decoder implementation of the avro codec specification. In affected versions a well-crafted string passed to avro's `github.com/hamba/avro/v2.Unmarshal()` can throw a `fatal error: runtime: out of memory` which is unrecoverable and can cause denial of service of the consumer of avro. The root cause of the issue is that avro uses part of the input to `Unmarshal()` to determine the size when creating a new slice and hence an attacker may consume arbitrary amounts of memory which in turn may cause the application to crash. This issue has been addressed in commit `b4a402f4` which has been included in release version `2.13.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-37475"
                }
            ]
        }
    ]
}