{
    "type": "bundle",
    "id": "bundle--713fe73e-088a-4b03-87f2-0d1c5267e5ab",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--10c1f3dd-b1a1-44e7-ad39-dc8d1801ed90",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-01-20T00:16:47.269753Z",
            "modified": "2024-01-20T00:16:47.269753Z",
            "name": "CVE-2024-23331",
            "description": "Vite is a frontend tooling framework for javascript. The Vite dev server option `server.fs.deny` can be bypassed on case-insensitive file systems using case-augmented versions of filenames. Notably this affects servers hosted on Windows. This bypass is similar to CVE-2023-34092 -- with surface area reduced to hosts having case-insensitive filesystems. Since `picomatch` defaults to case-sensitive glob matching, but the file server doesn't discriminate; a blacklist bypass is possible. By requesting raw filesystem paths using augmented casing, the matcher derived from `config.server.fs.deny` fails to block access to sensitive files. This issue has been addressed in vite@5.0.12, vite@4.5.2, vite@3.2.8, and vite@2.9.17. Users are advised to upgrade. Users unable to upgrade should restrict access to dev servers.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-23331"
                }
            ]
        }
    ]
}